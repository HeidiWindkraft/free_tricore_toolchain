/* $Id$
 * (L)
*/
#ifndef TEST_OTCLASML_MNEM_HXX
#define TEST_OTCLASML_MNEM_HXX

#include <otclasml/cmaps/mnem.hxx>
#include <testfx.hxx>

void testConstStringMapMnem(Tests &t) {
	using namespace otclasml::mnem;
	using namespace otclasml;

	t.startGroup("testConstStringMapMnem");
	t.start("toMnem");
	t.eq(ABS, toMnem("abs"), "abs");
	t.eq(ABS_B, toMnem("abs.b"), "abs.b");
	t.eq(ABS_H, toMnem("abs.h"), "abs.h");
	t.eq(ABSDIF, toMnem("absdif"), "absdif");
	t.eq(ABSDIF_B, toMnem("absdif.b"), "absdif.b");
	t.eq(ABSDIF_H, toMnem("absdif.h"), "absdif.h");
	t.eq(ABSDIFS, toMnem("absdifs"), "absdifs");
	t.eq(ABSDIFS_H, toMnem("absdifs.h"), "absdifs.h");
	t.eq(ABSS, toMnem("abss"), "abss");
	t.eq(ABSS_H, toMnem("abss.h"), "abss.h");
	t.eq(ADD, toMnem("add"), "add");
	t.eq(ADD_A, toMnem("add.a"), "add.a");
	t.eq(ADD_B, toMnem("add.b"), "add.b");
	t.eq(ADD_H, toMnem("add.h"), "add.h");
	t.eq(ADDC, toMnem("addc"), "addc");
	t.eq(ADDI, toMnem("addi"), "addi");
	t.eq(ADDIH, toMnem("addih"), "addih");
	t.eq(ADDIH_A, toMnem("addih.a"), "addih.a");
	t.eq(ADDS, toMnem("adds"), "adds");
	t.eq(ADDS_H, toMnem("adds.h"), "adds.h");
	t.eq(ADDS_HU, toMnem("adds.hu"), "adds.hu");
	t.eq(ADDS_U, toMnem("adds.u"), "adds.u");
	t.eq(ADDSC_A, toMnem("addsc.a"), "addsc.a");
	t.eq(ADDSC_AT, toMnem("addsc.at"), "addsc.at");
	t.eq(ADDX, toMnem("addx"), "addx");
	t.eq(AND, toMnem("and"), "and");
	t.eq(AND_AND_T, toMnem("and.and.t"), "and.and.t");
	t.eq(AND_ANDN_T, toMnem("and.andn.t"), "and.andn.t");
	t.eq(AND_EQ, toMnem("and.eq"), "and.eq");
	t.eq(AND_GE, toMnem("and.ge"), "and.ge");
	t.eq(AND_GE_U, toMnem("and.ge.u"), "and.ge.u");
	t.eq(AND_LT, toMnem("and.lt"), "and.lt");
	t.eq(AND_LT_U, toMnem("and.lt.u"), "and.lt.u");
	t.eq(AND_NE, toMnem("and.ne"), "and.ne");
	t.eq(AND_NOR_T, toMnem("and.nor.t"), "and.nor.t");
	t.eq(AND_OR_T, toMnem("and.or.t"), "and.or.t");
	t.eq(AND_T, toMnem("and.t"), "and.t");
	t.eq(ANDN, toMnem("andn"), "andn");
	t.eq(ANDN_T, toMnem("andn.t"), "andn.t");
	t.eq(BISR, toMnem("bisr"), "bisr");
	t.eq(BMERGE, toMnem("bmerge"), "bmerge");
	t.eq(BSPLIT, toMnem("bsplit"), "bsplit");
	t.eq(CACHEA_I, toMnem("cachea.i"), "cachea.i");
	t.eq(CACHEA_W, toMnem("cachea.w"), "cachea.w");
	t.eq(CACHEA_WI, toMnem("cachea.wi"), "cachea.wi");
	t.eq(CACHEI_I, toMnem("cachei.i"), "cachei.i");
	t.eq(CACHEI_W, toMnem("cachei.w"), "cachei.w");
	t.eq(CACHEI_WI, toMnem("cachei.wi"), "cachei.wi");
	t.eq(CADD, toMnem("cadd"), "cadd");
	t.eq(CADDN, toMnem("caddn"), "caddn");
	t.eq(CALL, toMnem("call"), "call");
	t.eq(CALLA, toMnem("calla"), "calla");
	t.eq(CALLI, toMnem("calli"), "calli");
	t.eq(CLO, toMnem("clo"), "clo");
	t.eq(CLO_H, toMnem("clo.h"), "clo.h");
	t.eq(CLS, toMnem("cls"), "cls");
	t.eq(CLS_H, toMnem("cls.h"), "cls.h");
	t.eq(CLZ, toMnem("clz"), "clz");
	t.eq(CLZ_H, toMnem("clz.h"), "clz.h");
	t.eq(CMOV, toMnem("cmov"), "cmov");
	t.eq(CMOVN, toMnem("cmovn"), "cmovn");
	t.eq(CMPSWAP_W, toMnem("cmpswap.w"), "cmpswap.w");
	t.eq(CRC32, toMnem("crc32"), "crc32");
	t.eq(CSUB, toMnem("csub"), "csub");
	t.eq(CSUBN, toMnem("csubn"), "csubn");
	t.eq(DEBUG, toMnem("debug"), "debug");
	t.eq(DEXTR, toMnem("dextr"), "dextr");
	t.eq(DISABLE, toMnem("disable"), "disable");
	t.eq(DIV, toMnem("div"), "div");
	t.eq(DIV_U, toMnem("div.u"), "div.u");
	t.eq(DSYNC, toMnem("dsync"), "dsync");
	t.eq(DVADJ, toMnem("dvadj"), "dvadj");
	t.eq(DVINIT, toMnem("dvinit"), "dvinit");
	t.eq(DVINIT_B, toMnem("dvinit.b"), "dvinit.b");
	t.eq(DVINIT_BU, toMnem("dvinit.bu"), "dvinit.bu");
	t.eq(DVINIT_H, toMnem("dvinit.h"), "dvinit.h");
	t.eq(DVINIT_HU, toMnem("dvinit.hu"), "dvinit.hu");
	t.eq(DVINIT_U, toMnem("dvinit.u"), "dvinit.u");
	t.eq(DVSTEP, toMnem("dvstep"), "dvstep");
	t.eq(DVSTEP_U, toMnem("dvstep.u"), "dvstep.u");
	t.eq(ENABLE, toMnem("enable"), "enable");
	t.eq(EQ, toMnem("eq"), "eq");
	t.eq(EQ_A, toMnem("eq.a"), "eq.a");
	t.eq(EQ_B, toMnem("eq.b"), "eq.b");
	t.eq(EQ_H, toMnem("eq.h"), "eq.h");
	t.eq(EQ_W, toMnem("eq.w"), "eq.w");
	t.eq(EQANY_B, toMnem("eqany.b"), "eqany.b");
	t.eq(EQANY_H, toMnem("eqany.h"), "eqany.h");
	t.eq(EQZ_A, toMnem("eqz.a"), "eqz.a");
	t.eq(EXTR, toMnem("extr"), "extr");
	t.eq(EXTR_U, toMnem("extr.u"), "extr.u");
	t.eq(F_ADD_F, toMnem("f_add.f"), "f_add.f");
	t.eq(F_CMP_F, toMnem("f_cmp.f"), "f_cmp.f");
	t.eq(F_DIV_F, toMnem("f_div.f"), "f_div.f");
	t.eq(F_ITOF, toMnem("f_itof"), "f_itof");
	t.eq(F_MADD_F, toMnem("f_madd.f"), "f_madd.f");
	t.eq(F_MSUB_F, toMnem("f_msub.f"), "f_msub.f");
	t.eq(F_MUL_F, toMnem("f_mul.f"), "f_mul.f");
	t.eq(F_Q31TOF, toMnem("f_q31tof"), "f_q31tof");
	t.eq(F_QSEED_F, toMnem("f_qseed.f"), "f_qseed.f");
	t.eq(F_SUB_F, toMnem("f_sub.f"), "f_sub.f");
	t.eq(F_UPDFL, toMnem("f_updfl"), "f_updfl");
	t.eq(F_UTOF, toMnem("f_utof"), "f_utof");
	t.eq(FCALL, toMnem("fcall"), "fcall");
	t.eq(FCALLA, toMnem("fcalla"), "fcalla");
	t.eq(FCALLI, toMnem("fcalli"), "fcalli");
	t.eq(FRET, toMnem("fret"), "fret");
	t.eq(FTOI, toMnem("ftoi"), "ftoi");
	t.eq(FTOIZ, toMnem("ftoiz"), "ftoiz");
	t.eq(FTOQ31, toMnem("ftoq31"), "ftoq31");
	t.eq(FTOQ31Z, toMnem("ftoq31z"), "ftoq31z");
	t.eq(FTOU, toMnem("ftou"), "ftou");
	t.eq(FTOUZ, toMnem("ftouz"), "ftouz");
	t.eq(GE, toMnem("ge"), "ge");
	t.eq(GE_A, toMnem("ge.a"), "ge.a");
	t.eq(GE_U, toMnem("ge.u"), "ge.u");
	t.eq(IMASK, toMnem("imask"), "imask");
	t.eq(INS_T, toMnem("ins.t"), "ins.t");
	t.eq(INSERT, toMnem("insert"), "insert");
	t.eq(INSN_T, toMnem("insn.t"), "insn.t");
	t.eq(ISYNC, toMnem("isync"), "isync");
	t.eq(IXMAX, toMnem("ixmax"), "ixmax");
	t.eq(IXMAX_U, toMnem("ixmax.u"), "ixmax.u");
	t.eq(IXMIN, toMnem("ixmin"), "ixmin");
	t.eq(IXMIN_U, toMnem("ixmin.u"), "ixmin.u");
	t.eq(J, toMnem("j"), "j");
	t.eq(JA, toMnem("ja"), "ja");
	t.eq(JEQ, toMnem("jeq"), "jeq");
	t.eq(JEQ_A, toMnem("jeq.a"), "jeq.a");
	t.eq(JGE, toMnem("jge"), "jge");
	t.eq(JGE_U, toMnem("jge.u"), "jge.u");
	t.eq(JGEZ, toMnem("jgez"), "jgez");
	t.eq(JGTZ, toMnem("jgtz"), "jgtz");
	t.eq(JI, toMnem("ji"), "ji");
	t.eq(JL, toMnem("jl"), "jl");
	t.eq(JLA, toMnem("jla"), "jla");
	t.eq(JLEZ, toMnem("jlez"), "jlez");
	t.eq(JLI, toMnem("jli"), "jli");
	t.eq(JLT, toMnem("jlt"), "jlt");
	t.eq(JLT_U, toMnem("jlt.u"), "jlt.u");
	t.eq(JLTZ, toMnem("jltz"), "jltz");
	t.eq(JNE, toMnem("jne"), "jne");
	t.eq(JNE_A, toMnem("jne.a"), "jne.a");
	t.eq(JNED, toMnem("jned"), "jned");
	t.eq(JNEI, toMnem("jnei"), "jnei");
	t.eq(JNZ, toMnem("jnz"), "jnz");
	t.eq(JNZ_A, toMnem("jnz.a"), "jnz.a");
	t.eq(JNZ_T, toMnem("jnz.t"), "jnz.t");
	t.eq(JZ, toMnem("jz"), "jz");
	t.eq(JZ_A, toMnem("jz.a"), "jz.a");
	t.eq(JZ_T, toMnem("jz.t"), "jz.t");
	t.eq(LD_A, toMnem("ld.a"), "ld.a");
	t.eq(LD_B, toMnem("ld.b"), "ld.b");
	t.eq(LD_BU, toMnem("ld.bu"), "ld.bu");
	t.eq(LD_D, toMnem("ld.d"), "ld.d");
	t.eq(LD_DA, toMnem("ld.da"), "ld.da");
	t.eq(LD_H, toMnem("ld.h"), "ld.h");
	t.eq(LD_HU, toMnem("ld.hu"), "ld.hu");
	t.eq(LD_Q, toMnem("ld.q"), "ld.q");
	t.eq(LD_W, toMnem("ld.w"), "ld.w");
	t.eq(LDLCX, toMnem("ldlcx"), "ldlcx");
	t.eq(LDMST, toMnem("ldmst"), "ldmst");
	t.eq(LDUCX, toMnem("lducx"), "lducx");
	t.eq(LEA, toMnem("lea"), "lea");
	t.eq(LOOP, toMnem("loop"), "loop");
	t.eq(LOOPU, toMnem("loopu"), "loopu");
	t.eq(LT, toMnem("lt"), "lt");
	t.eq(LT_A, toMnem("lt.a"), "lt.a");
	t.eq(LT_B, toMnem("lt.b"), "lt.b");
	t.eq(LT_BU, toMnem("lt.bu"), "lt.bu");
	t.eq(LT_H, toMnem("lt.h"), "lt.h");
	t.eq(LT_HU, toMnem("lt.hu"), "lt.hu");
	t.eq(LT_U, toMnem("lt.u"), "lt.u");
	t.eq(LT_W, toMnem("lt.w"), "lt.w");
	t.eq(LT_WU, toMnem("lt.wu"), "lt.wu");
	t.eq(MADD, toMnem("madd"), "madd");
	t.eq(MADD_H, toMnem("madd.h"), "madd.h");
	t.eq(MADD_Q, toMnem("madd.q"), "madd.q");
	t.eq(MADD_U, toMnem("madd.u"), "madd.u");
	t.eq(MADDM_H, toMnem("maddm.h"), "maddm.h");
	t.eq(MADDMS_H, toMnem("maddms.h"), "maddms.h");
	t.eq(MADDR_H, toMnem("maddr.h"), "maddr.h");
	t.eq(MADDR_Q, toMnem("maddr.q"), "maddr.q");
	t.eq(MADDRS_H, toMnem("maddrs.h"), "maddrs.h");
	t.eq(MADDRS_Q, toMnem("maddrs.q"), "maddrs.q");
	t.eq(MADDS, toMnem("madds"), "madds");
	t.eq(MADDS_H, toMnem("madds.h"), "madds.h");
	t.eq(MADDS_Q, toMnem("madds.q"), "madds.q");
	t.eq(MADDS_U, toMnem("madds.u"), "madds.u");
	t.eq(MADDSU_H, toMnem("maddsu.h"), "maddsu.h");
	t.eq(MADDSUM_H, toMnem("maddsum.h"), "maddsum.h");
	t.eq(MADDSUMS_H, toMnem("maddsums.h"), "maddsums.h");
	t.eq(MADDSUR_H, toMnem("maddsur.h"), "maddsur.h");
	t.eq(MADDSURS_H, toMnem("maddsurs.h"), "maddsurs.h");
	t.eq(MADDSUS_H, toMnem("maddsus.h"), "maddsus.h");
	t.eq(MAX, toMnem("max"), "max");
	t.eq(MAX_B, toMnem("max.b"), "max.b");
	t.eq(MAX_BU, toMnem("max.bu"), "max.bu");
	t.eq(MAX_H, toMnem("max.h"), "max.h");
	t.eq(MAX_HU, toMnem("max.hu"), "max.hu");
	t.eq(MAX_U, toMnem("max.u"), "max.u");
	t.eq(MFCR, toMnem("mfcr"), "mfcr");
	t.eq(MIN, toMnem("min"), "min");
	t.eq(MIN_B, toMnem("min.b"), "min.b");
	t.eq(MIN_BU, toMnem("min.bu"), "min.bu");
	t.eq(MIN_H, toMnem("min.h"), "min.h");
	t.eq(MIN_HU, toMnem("min.hu"), "min.hu");
	t.eq(MIN_U, toMnem("min.u"), "min.u");
	t.eq(MOV, toMnem("mov"), "mov");
	t.eq(MOV_A, toMnem("mov.a"), "mov.a");
	t.eq(MOV_AA, toMnem("mov.aa"), "mov.aa");
	t.eq(MOV_D, toMnem("mov.d"), "mov.d");
	t.eq(MOV_U, toMnem("mov.u"), "mov.u");
	t.eq(MOVH, toMnem("movh"), "movh");
	t.eq(MOVH_A, toMnem("movh.a"), "movh.a");
	t.eq(MSUB, toMnem("msub"), "msub");
	t.eq(MSUB_H, toMnem("msub.h"), "msub.h");
	t.eq(MSUB_Q, toMnem("msub.q"), "msub.q");
	t.eq(MSUB_U, toMnem("msub.u"), "msub.u");
	t.eq(MSUBAD_H, toMnem("msubad.h"), "msubad.h");
	t.eq(MSUBADM_H, toMnem("msubadm.h"), "msubadm.h");
	t.eq(MSUBADMS_H, toMnem("msubadms.h"), "msubadms.h");
	t.eq(MSUBADR_H, toMnem("msubadr.h"), "msubadr.h");
	t.eq(MSUBADRS_H, toMnem("msubadrs.h"), "msubadrs.h");
	t.eq(MSUBADS_H, toMnem("msubads.h"), "msubads.h");
	t.eq(MSUBM_H, toMnem("msubm.h"), "msubm.h");
	t.eq(MSUBMS_H, toMnem("msubms.h"), "msubms.h");
	t.eq(MSUBR_H, toMnem("msubr.h"), "msubr.h");
	t.eq(MSUBR_Q, toMnem("msubr.q"), "msubr.q");
	t.eq(MSUBRS_H, toMnem("msubrs.h"), "msubrs.h");
	t.eq(MSUBRS_Q, toMnem("msubrs.q"), "msubrs.q");
	t.eq(MSUBS, toMnem("msubs"), "msubs");
	t.eq(MSUBS_H, toMnem("msubs.h"), "msubs.h");
	t.eq(MSUBS_Q, toMnem("msubs.q"), "msubs.q");
	t.eq(MSUBS_U, toMnem("msubs.u"), "msubs.u");
	t.eq(MTCR, toMnem("mtcr"), "mtcr");
	t.eq(MUL, toMnem("mul"), "mul");
	t.eq(MUL_H, toMnem("mul.h"), "mul.h");
	t.eq(MUL_Q, toMnem("mul.q"), "mul.q");
	t.eq(MUL_U, toMnem("mul.u"), "mul.u");
	t.eq(MULM_H, toMnem("mulm.h"), "mulm.h");
	t.eq(MULMS_H, toMnem("mulms.h"), "mulms.h");
	t.eq(MULR_H, toMnem("mulr.h"), "mulr.h");
	t.eq(MULR_Q, toMnem("mulr.q"), "mulr.q");
	t.eq(MULS, toMnem("muls"), "muls");
	t.eq(MULS_U, toMnem("muls.u"), "muls.u");
	t.eq(NAND, toMnem("nand"), "nand");
	t.eq(NAND_T, toMnem("nand.t"), "nand.t");
	t.eq(NE, toMnem("ne"), "ne");
	t.eq(NE_A, toMnem("ne.a"), "ne.a");
	t.eq(NEZ_A, toMnem("nez.a"), "nez.a");
	t.eq(NOP, toMnem("nop"), "nop");
	t.eq(NOR, toMnem("nor"), "nor");
	t.eq(NOR_T, toMnem("nor.t"), "nor.t");
	t.eq(NOT, toMnem("not"), "not");
	t.eq(OR, toMnem("or"), "or");
	t.eq(OR_AND_T, toMnem("or.and.t"), "or.and.t");
	t.eq(OR_ANDN_T, toMnem("or.andn.t"), "or.andn.t");
	t.eq(OR_EQ, toMnem("or.eq"), "or.eq");
	t.eq(OR_GE, toMnem("or.ge"), "or.ge");
	t.eq(OR_GE_U, toMnem("or.ge.u"), "or.ge.u");
	t.eq(OR_LT, toMnem("or.lt"), "or.lt");
	t.eq(OR_LT_U, toMnem("or.lt.u"), "or.lt.u");
	t.eq(OR_NE, toMnem("or.ne"), "or.ne");
	t.eq(OR_NOR_T, toMnem("or.nor.t"), "or.nor.t");
	t.eq(OR_OR_T, toMnem("or.or.t"), "or.or.t");
	t.eq(OR_T, toMnem("or.t"), "or.t");
	t.eq(ORN, toMnem("orn"), "orn");
	t.eq(ORN_T, toMnem("orn.t"), "orn.t");
	t.eq(PACK, toMnem("pack"), "pack");
	t.eq(PARITY, toMnem("parity"), "parity");
	t.eq(RESTORE, toMnem("restore"), "restore");
	t.eq(RET, toMnem("ret"), "ret");
	t.eq(RFE, toMnem("rfe"), "rfe");
	t.eq(RFM, toMnem("rfm"), "rfm");
	t.eq(RSLCX, toMnem("rslcx"), "rslcx");
	t.eq(RSTV, toMnem("rstv"), "rstv");
	t.eq(RSUB, toMnem("rsub"), "rsub");
	t.eq(RSUBS, toMnem("rsubs"), "rsubs");
	t.eq(RSUBS_U, toMnem("rsubs.u"), "rsubs.u");
	t.eq(SAT_B, toMnem("sat.b"), "sat.b");
	t.eq(SAT_BU, toMnem("sat.bu"), "sat.bu");
	t.eq(SAT_H, toMnem("sat.h"), "sat.h");
	t.eq(SAT_HU, toMnem("sat.hu"), "sat.hu");
	t.eq(SEL, toMnem("sel"), "sel");
	t.eq(SELN, toMnem("seln"), "seln");
	t.eq(SH, toMnem("sh"), "sh");
	t.eq(SH_AND_T, toMnem("sh.and.t"), "sh.and.t");
	t.eq(SH_ANDN_T, toMnem("sh.andn.t"), "sh.andn.t");
	t.eq(SH_EQ, toMnem("sh.eq"), "sh.eq");
	t.eq(SH_GE, toMnem("sh.ge"), "sh.ge");
	t.eq(SH_GE_U, toMnem("sh.ge.u"), "sh.ge.u");
	t.eq(SH_H, toMnem("sh.h"), "sh.h");
	t.eq(SH_LT, toMnem("sh.lt"), "sh.lt");
	t.eq(SH_LT_U, toMnem("sh.lt.u"), "sh.lt.u");
	t.eq(SH_NAND_T, toMnem("sh.nand.t"), "sh.nand.t");
	t.eq(SH_NE, toMnem("sh.ne"), "sh.ne");
	t.eq(SH_NOR_T, toMnem("sh.nor.t"), "sh.nor.t");
	t.eq(SH_OR_T, toMnem("sh.or.t"), "sh.or.t");
	t.eq(SH_ORN_T, toMnem("sh.orn.t"), "sh.orn.t");
	t.eq(SH_XNOR_T, toMnem("sh.xnor.t"), "sh.xnor.t");
	t.eq(SH_XOR_T, toMnem("sh.xor.t"), "sh.xor.t");
	t.eq(SHA, toMnem("sha"), "sha");
	t.eq(SHA_H, toMnem("sha.h"), "sha.h");
	t.eq(SHAS, toMnem("shas"), "shas");
	t.eq(ST_A, toMnem("st.a"), "st.a");
	t.eq(ST_B, toMnem("st.b"), "st.b");
	t.eq(ST_D, toMnem("st.d"), "st.d");
	t.eq(ST_DA, toMnem("st.da"), "st.da");
	t.eq(ST_H, toMnem("st.h"), "st.h");
	t.eq(ST_Q, toMnem("st.q"), "st.q");
	t.eq(ST_T, toMnem("st.t"), "st.t");
	t.eq(ST_W, toMnem("st.w"), "st.w");
	t.eq(STLCX, toMnem("stlcx"), "stlcx");
	t.eq(STUCX, toMnem("stucx"), "stucx");
	t.eq(SUB, toMnem("sub"), "sub");
	t.eq(SUB_A, toMnem("sub.a"), "sub.a");
	t.eq(SUB_B, toMnem("sub.b"), "sub.b");
	t.eq(SUB_H, toMnem("sub.h"), "sub.h");
	t.eq(SUBC, toMnem("subc"), "subc");
	t.eq(SUBS, toMnem("subs"), "subs");
	t.eq(SUBS_H, toMnem("subs.h"), "subs.h");
	t.eq(SUBS_HU, toMnem("subs.hu"), "subs.hu");
	t.eq(SUBS_U, toMnem("subs.u"), "subs.u");
	t.eq(SUBX, toMnem("subx"), "subx");
	t.eq(SVLCX, toMnem("svlcx"), "svlcx");
	t.eq(SWAP_W, toMnem("swap.w"), "swap.w");
	t.eq(SWAPMSK_W, toMnem("swapmsk.w"), "swapmsk.w");
	t.eq(SYSCALL, toMnem("syscall"), "syscall");
	t.eq(TRAPSV, toMnem("trapsv"), "trapsv");
	t.eq(TRAPV, toMnem("trapv"), "trapv");
	t.eq(UNPACK, toMnem("unpack"), "unpack");
	t.eq(WAIT, toMnem("wait"), "wait");
	t.eq(XNOR, toMnem("xnor"), "xnor");
	t.eq(XNOR_T, toMnem("xnor.t"), "xnor.t");
	t.eq(XOR, toMnem("xor"), "xor");
	t.eq(XOR_EQ, toMnem("xor.eq"), "xor.eq");
	t.eq(XOR_GE, toMnem("xor.ge"), "xor.ge");
	t.eq(XOR_GE_U, toMnem("xor.ge.u"), "xor.ge.u");
	t.eq(XOR_LT, toMnem("xor.lt"), "xor.lt");
	t.eq(XOR_LT_U, toMnem("xor.lt.u"), "xor.lt.u");
	t.eq(XOR_NE, toMnem("xor.ne"), "xor.ne");
	t.eq(XOR_T, toMnem("xor.t"), "xor.t");
	t.eq(NENTRIES, toMnem("//"), "invalid entry");
	t.stop();

	t.start("toString");
	t.eq(StringView("abs", 3), toString(ABS), "abs");
	t.eq(StringView("abs.b", 5), toString(ABS_B), "abs.b");
	t.eq(StringView("abs.h", 5), toString(ABS_H), "abs.h");
	t.eq(StringView("absdif", 6), toString(ABSDIF), "absdif");
	t.eq(StringView("absdif.b", 8), toString(ABSDIF_B), "absdif.b");
	t.eq(StringView("absdif.h", 8), toString(ABSDIF_H), "absdif.h");
	t.eq(StringView("absdifs", 7), toString(ABSDIFS), "absdifs");
	t.eq(StringView("absdifs.h", 9), toString(ABSDIFS_H), "absdifs.h");
	t.eq(StringView("abss", 4), toString(ABSS), "abss");
	t.eq(StringView("abss.h", 6), toString(ABSS_H), "abss.h");
	t.eq(StringView("add", 3), toString(ADD), "add");
	t.eq(StringView("add.a", 5), toString(ADD_A), "add.a");
	t.eq(StringView("add.b", 5), toString(ADD_B), "add.b");
	t.eq(StringView("add.h", 5), toString(ADD_H), "add.h");
	t.eq(StringView("addc", 4), toString(ADDC), "addc");
	t.eq(StringView("addi", 4), toString(ADDI), "addi");
	t.eq(StringView("addih", 5), toString(ADDIH), "addih");
	t.eq(StringView("addih.a", 7), toString(ADDIH_A), "addih.a");
	t.eq(StringView("adds", 4), toString(ADDS), "adds");
	t.eq(StringView("adds.h", 6), toString(ADDS_H), "adds.h");
	t.eq(StringView("adds.hu", 7), toString(ADDS_HU), "adds.hu");
	t.eq(StringView("adds.u", 6), toString(ADDS_U), "adds.u");
	t.eq(StringView("addsc.a", 7), toString(ADDSC_A), "addsc.a");
	t.eq(StringView("addsc.at", 8), toString(ADDSC_AT), "addsc.at");
	t.eq(StringView("addx", 4), toString(ADDX), "addx");
	t.eq(StringView("and", 3), toString(AND), "and");
	t.eq(StringView("and.and.t", 9), toString(AND_AND_T), "and.and.t");
	t.eq(StringView("and.andn.t", 10), toString(AND_ANDN_T), "and.andn.t");
	t.eq(StringView("and.eq", 6), toString(AND_EQ), "and.eq");
	t.eq(StringView("and.ge", 6), toString(AND_GE), "and.ge");
	t.eq(StringView("and.ge.u", 8), toString(AND_GE_U), "and.ge.u");
	t.eq(StringView("and.lt", 6), toString(AND_LT), "and.lt");
	t.eq(StringView("and.lt.u", 8), toString(AND_LT_U), "and.lt.u");
	t.eq(StringView("and.ne", 6), toString(AND_NE), "and.ne");
	t.eq(StringView("and.nor.t", 9), toString(AND_NOR_T), "and.nor.t");
	t.eq(StringView("and.or.t", 8), toString(AND_OR_T), "and.or.t");
	t.eq(StringView("and.t", 5), toString(AND_T), "and.t");
	t.eq(StringView("andn", 4), toString(ANDN), "andn");
	t.eq(StringView("andn.t", 6), toString(ANDN_T), "andn.t");
	t.eq(StringView("bisr", 4), toString(BISR), "bisr");
	t.eq(StringView("bmerge", 6), toString(BMERGE), "bmerge");
	t.eq(StringView("bsplit", 6), toString(BSPLIT), "bsplit");
	t.eq(StringView("cachea.i", 8), toString(CACHEA_I), "cachea.i");
	t.eq(StringView("cachea.w", 8), toString(CACHEA_W), "cachea.w");
	t.eq(StringView("cachea.wi", 9), toString(CACHEA_WI), "cachea.wi");
	t.eq(StringView("cachei.i", 8), toString(CACHEI_I), "cachei.i");
	t.eq(StringView("cachei.w", 8), toString(CACHEI_W), "cachei.w");
	t.eq(StringView("cachei.wi", 9), toString(CACHEI_WI), "cachei.wi");
	t.eq(StringView("cadd", 4), toString(CADD), "cadd");
	t.eq(StringView("caddn", 5), toString(CADDN), "caddn");
	t.eq(StringView("call", 4), toString(CALL), "call");
	t.eq(StringView("calla", 5), toString(CALLA), "calla");
	t.eq(StringView("calli", 5), toString(CALLI), "calli");
	t.eq(StringView("clo", 3), toString(CLO), "clo");
	t.eq(StringView("clo.h", 5), toString(CLO_H), "clo.h");
	t.eq(StringView("cls", 3), toString(CLS), "cls");
	t.eq(StringView("cls.h", 5), toString(CLS_H), "cls.h");
	t.eq(StringView("clz", 3), toString(CLZ), "clz");
	t.eq(StringView("clz.h", 5), toString(CLZ_H), "clz.h");
	t.eq(StringView("cmov", 4), toString(CMOV), "cmov");
	t.eq(StringView("cmovn", 5), toString(CMOVN), "cmovn");
	t.eq(StringView("cmpswap.w", 9), toString(CMPSWAP_W), "cmpswap.w");
	t.eq(StringView("crc32", 5), toString(CRC32), "crc32");
	t.eq(StringView("csub", 4), toString(CSUB), "csub");
	t.eq(StringView("csubn", 5), toString(CSUBN), "csubn");
	t.eq(StringView("debug", 5), toString(DEBUG), "debug");
	t.eq(StringView("dextr", 5), toString(DEXTR), "dextr");
	t.eq(StringView("disable", 7), toString(DISABLE), "disable");
	t.eq(StringView("div", 3), toString(DIV), "div");
	t.eq(StringView("div.u", 5), toString(DIV_U), "div.u");
	t.eq(StringView("dsync", 5), toString(DSYNC), "dsync");
	t.eq(StringView("dvadj", 5), toString(DVADJ), "dvadj");
	t.eq(StringView("dvinit", 6), toString(DVINIT), "dvinit");
	t.eq(StringView("dvinit.b", 8), toString(DVINIT_B), "dvinit.b");
	t.eq(StringView("dvinit.bu", 9), toString(DVINIT_BU), "dvinit.bu");
	t.eq(StringView("dvinit.h", 8), toString(DVINIT_H), "dvinit.h");
	t.eq(StringView("dvinit.hu", 9), toString(DVINIT_HU), "dvinit.hu");
	t.eq(StringView("dvinit.u", 8), toString(DVINIT_U), "dvinit.u");
	t.eq(StringView("dvstep", 6), toString(DVSTEP), "dvstep");
	t.eq(StringView("dvstep.u", 8), toString(DVSTEP_U), "dvstep.u");
	t.eq(StringView("enable", 6), toString(ENABLE), "enable");
	t.eq(StringView("eq", 2), toString(EQ), "eq");
	t.eq(StringView("eq.a", 4), toString(EQ_A), "eq.a");
	t.eq(StringView("eq.b", 4), toString(EQ_B), "eq.b");
	t.eq(StringView("eq.h", 4), toString(EQ_H), "eq.h");
	t.eq(StringView("eq.w", 4), toString(EQ_W), "eq.w");
	t.eq(StringView("eqany.b", 7), toString(EQANY_B), "eqany.b");
	t.eq(StringView("eqany.h", 7), toString(EQANY_H), "eqany.h");
	t.eq(StringView("eqz.a", 5), toString(EQZ_A), "eqz.a");
	t.eq(StringView("extr", 4), toString(EXTR), "extr");
	t.eq(StringView("extr.u", 6), toString(EXTR_U), "extr.u");
	t.eq(StringView("f_add.f", 7), toString(F_ADD_F), "f_add.f");
	t.eq(StringView("f_cmp.f", 7), toString(F_CMP_F), "f_cmp.f");
	t.eq(StringView("f_div.f", 7), toString(F_DIV_F), "f_div.f");
	t.eq(StringView("f_itof", 6), toString(F_ITOF), "f_itof");
	t.eq(StringView("f_madd.f", 8), toString(F_MADD_F), "f_madd.f");
	t.eq(StringView("f_msub.f", 8), toString(F_MSUB_F), "f_msub.f");
	t.eq(StringView("f_mul.f", 7), toString(F_MUL_F), "f_mul.f");
	t.eq(StringView("f_q31tof", 8), toString(F_Q31TOF), "f_q31tof");
	t.eq(StringView("f_qseed.f", 9), toString(F_QSEED_F), "f_qseed.f");
	t.eq(StringView("f_sub.f", 7), toString(F_SUB_F), "f_sub.f");
	t.eq(StringView("f_updfl", 7), toString(F_UPDFL), "f_updfl");
	t.eq(StringView("f_utof", 6), toString(F_UTOF), "f_utof");
	t.eq(StringView("fcall", 5), toString(FCALL), "fcall");
	t.eq(StringView("fcalla", 6), toString(FCALLA), "fcalla");
	t.eq(StringView("fcalli", 6), toString(FCALLI), "fcalli");
	t.eq(StringView("fret", 4), toString(FRET), "fret");
	t.eq(StringView("ftoi", 4), toString(FTOI), "ftoi");
	t.eq(StringView("ftoiz", 5), toString(FTOIZ), "ftoiz");
	t.eq(StringView("ftoq31", 6), toString(FTOQ31), "ftoq31");
	t.eq(StringView("ftoq31z", 7), toString(FTOQ31Z), "ftoq31z");
	t.eq(StringView("ftou", 4), toString(FTOU), "ftou");
	t.eq(StringView("ftouz", 5), toString(FTOUZ), "ftouz");
	t.eq(StringView("ge", 2), toString(GE), "ge");
	t.eq(StringView("ge.a", 4), toString(GE_A), "ge.a");
	t.eq(StringView("ge.u", 4), toString(GE_U), "ge.u");
	t.eq(StringView("imask", 5), toString(IMASK), "imask");
	t.eq(StringView("ins.t", 5), toString(INS_T), "ins.t");
	t.eq(StringView("insert", 6), toString(INSERT), "insert");
	t.eq(StringView("insn.t", 6), toString(INSN_T), "insn.t");
	t.eq(StringView("isync", 5), toString(ISYNC), "isync");
	t.eq(StringView("ixmax", 5), toString(IXMAX), "ixmax");
	t.eq(StringView("ixmax.u", 7), toString(IXMAX_U), "ixmax.u");
	t.eq(StringView("ixmin", 5), toString(IXMIN), "ixmin");
	t.eq(StringView("ixmin.u", 7), toString(IXMIN_U), "ixmin.u");
	t.eq(StringView("j", 1), toString(J), "j");
	t.eq(StringView("ja", 2), toString(JA), "ja");
	t.eq(StringView("jeq", 3), toString(JEQ), "jeq");
	t.eq(StringView("jeq.a", 5), toString(JEQ_A), "jeq.a");
	t.eq(StringView("jge", 3), toString(JGE), "jge");
	t.eq(StringView("jge.u", 5), toString(JGE_U), "jge.u");
	t.eq(StringView("jgez", 4), toString(JGEZ), "jgez");
	t.eq(StringView("jgtz", 4), toString(JGTZ), "jgtz");
	t.eq(StringView("ji", 2), toString(JI), "ji");
	t.eq(StringView("jl", 2), toString(JL), "jl");
	t.eq(StringView("jla", 3), toString(JLA), "jla");
	t.eq(StringView("jlez", 4), toString(JLEZ), "jlez");
	t.eq(StringView("jli", 3), toString(JLI), "jli");
	t.eq(StringView("jlt", 3), toString(JLT), "jlt");
	t.eq(StringView("jlt.u", 5), toString(JLT_U), "jlt.u");
	t.eq(StringView("jltz", 4), toString(JLTZ), "jltz");
	t.eq(StringView("jne", 3), toString(JNE), "jne");
	t.eq(StringView("jne.a", 5), toString(JNE_A), "jne.a");
	t.eq(StringView("jned", 4), toString(JNED), "jned");
	t.eq(StringView("jnei", 4), toString(JNEI), "jnei");
	t.eq(StringView("jnz", 3), toString(JNZ), "jnz");
	t.eq(StringView("jnz.a", 5), toString(JNZ_A), "jnz.a");
	t.eq(StringView("jnz.t", 5), toString(JNZ_T), "jnz.t");
	t.eq(StringView("jz", 2), toString(JZ), "jz");
	t.eq(StringView("jz.a", 4), toString(JZ_A), "jz.a");
	t.eq(StringView("jz.t", 4), toString(JZ_T), "jz.t");
	t.eq(StringView("ld.a", 4), toString(LD_A), "ld.a");
	t.eq(StringView("ld.b", 4), toString(LD_B), "ld.b");
	t.eq(StringView("ld.bu", 5), toString(LD_BU), "ld.bu");
	t.eq(StringView("ld.d", 4), toString(LD_D), "ld.d");
	t.eq(StringView("ld.da", 5), toString(LD_DA), "ld.da");
	t.eq(StringView("ld.h", 4), toString(LD_H), "ld.h");
	t.eq(StringView("ld.hu", 5), toString(LD_HU), "ld.hu");
	t.eq(StringView("ld.q", 4), toString(LD_Q), "ld.q");
	t.eq(StringView("ld.w", 4), toString(LD_W), "ld.w");
	t.eq(StringView("ldlcx", 5), toString(LDLCX), "ldlcx");
	t.eq(StringView("ldmst", 5), toString(LDMST), "ldmst");
	t.eq(StringView("lducx", 5), toString(LDUCX), "lducx");
	t.eq(StringView("lea", 3), toString(LEA), "lea");
	t.eq(StringView("loop", 4), toString(LOOP), "loop");
	t.eq(StringView("loopu", 5), toString(LOOPU), "loopu");
	t.eq(StringView("lt", 2), toString(LT), "lt");
	t.eq(StringView("lt.a", 4), toString(LT_A), "lt.a");
	t.eq(StringView("lt.b", 4), toString(LT_B), "lt.b");
	t.eq(StringView("lt.bu", 5), toString(LT_BU), "lt.bu");
	t.eq(StringView("lt.h", 4), toString(LT_H), "lt.h");
	t.eq(StringView("lt.hu", 5), toString(LT_HU), "lt.hu");
	t.eq(StringView("lt.u", 4), toString(LT_U), "lt.u");
	t.eq(StringView("lt.w", 4), toString(LT_W), "lt.w");
	t.eq(StringView("lt.wu", 5), toString(LT_WU), "lt.wu");
	t.eq(StringView("madd", 4), toString(MADD), "madd");
	t.eq(StringView("madd.h", 6), toString(MADD_H), "madd.h");
	t.eq(StringView("madd.q", 6), toString(MADD_Q), "madd.q");
	t.eq(StringView("madd.u", 6), toString(MADD_U), "madd.u");
	t.eq(StringView("maddm.h", 7), toString(MADDM_H), "maddm.h");
	t.eq(StringView("maddms.h", 8), toString(MADDMS_H), "maddms.h");
	t.eq(StringView("maddr.h", 7), toString(MADDR_H), "maddr.h");
	t.eq(StringView("maddr.q", 7), toString(MADDR_Q), "maddr.q");
	t.eq(StringView("maddrs.h", 8), toString(MADDRS_H), "maddrs.h");
	t.eq(StringView("maddrs.q", 8), toString(MADDRS_Q), "maddrs.q");
	t.eq(StringView("madds", 5), toString(MADDS), "madds");
	t.eq(StringView("madds.h", 7), toString(MADDS_H), "madds.h");
	t.eq(StringView("madds.q", 7), toString(MADDS_Q), "madds.q");
	t.eq(StringView("madds.u", 7), toString(MADDS_U), "madds.u");
	t.eq(StringView("maddsu.h", 8), toString(MADDSU_H), "maddsu.h");
	t.eq(StringView("maddsum.h", 9), toString(MADDSUM_H), "maddsum.h");
	t.eq(StringView("maddsums.h", 10), toString(MADDSUMS_H), "maddsums.h");
	t.eq(StringView("maddsur.h", 9), toString(MADDSUR_H), "maddsur.h");
	t.eq(StringView("maddsurs.h", 10), toString(MADDSURS_H), "maddsurs.h");
	t.eq(StringView("maddsus.h", 9), toString(MADDSUS_H), "maddsus.h");
	t.eq(StringView("max", 3), toString(MAX), "max");
	t.eq(StringView("max.b", 5), toString(MAX_B), "max.b");
	t.eq(StringView("max.bu", 6), toString(MAX_BU), "max.bu");
	t.eq(StringView("max.h", 5), toString(MAX_H), "max.h");
	t.eq(StringView("max.hu", 6), toString(MAX_HU), "max.hu");
	t.eq(StringView("max.u", 5), toString(MAX_U), "max.u");
	t.eq(StringView("mfcr", 4), toString(MFCR), "mfcr");
	t.eq(StringView("min", 3), toString(MIN), "min");
	t.eq(StringView("min.b", 5), toString(MIN_B), "min.b");
	t.eq(StringView("min.bu", 6), toString(MIN_BU), "min.bu");
	t.eq(StringView("min.h", 5), toString(MIN_H), "min.h");
	t.eq(StringView("min.hu", 6), toString(MIN_HU), "min.hu");
	t.eq(StringView("min.u", 5), toString(MIN_U), "min.u");
	t.eq(StringView("mov", 3), toString(MOV), "mov");
	t.eq(StringView("mov.a", 5), toString(MOV_A), "mov.a");
	t.eq(StringView("mov.aa", 6), toString(MOV_AA), "mov.aa");
	t.eq(StringView("mov.d", 5), toString(MOV_D), "mov.d");
	t.eq(StringView("mov.u", 5), toString(MOV_U), "mov.u");
	t.eq(StringView("movh", 4), toString(MOVH), "movh");
	t.eq(StringView("movh.a", 6), toString(MOVH_A), "movh.a");
	t.eq(StringView("msub", 4), toString(MSUB), "msub");
	t.eq(StringView("msub.h", 6), toString(MSUB_H), "msub.h");
	t.eq(StringView("msub.q", 6), toString(MSUB_Q), "msub.q");
	t.eq(StringView("msub.u", 6), toString(MSUB_U), "msub.u");
	t.eq(StringView("msubad.h", 8), toString(MSUBAD_H), "msubad.h");
	t.eq(StringView("msubadm.h", 9), toString(MSUBADM_H), "msubadm.h");
	t.eq(StringView("msubadms.h", 10), toString(MSUBADMS_H), "msubadms.h");
	t.eq(StringView("msubadr.h", 9), toString(MSUBADR_H), "msubadr.h");
	t.eq(StringView("msubadrs.h", 10), toString(MSUBADRS_H), "msubadrs.h");
	t.eq(StringView("msubads.h", 9), toString(MSUBADS_H), "msubads.h");
	t.eq(StringView("msubm.h", 7), toString(MSUBM_H), "msubm.h");
	t.eq(StringView("msubms.h", 8), toString(MSUBMS_H), "msubms.h");
	t.eq(StringView("msubr.h", 7), toString(MSUBR_H), "msubr.h");
	t.eq(StringView("msubr.q", 7), toString(MSUBR_Q), "msubr.q");
	t.eq(StringView("msubrs.h", 8), toString(MSUBRS_H), "msubrs.h");
	t.eq(StringView("msubrs.q", 8), toString(MSUBRS_Q), "msubrs.q");
	t.eq(StringView("msubs", 5), toString(MSUBS), "msubs");
	t.eq(StringView("msubs.h", 7), toString(MSUBS_H), "msubs.h");
	t.eq(StringView("msubs.q", 7), toString(MSUBS_Q), "msubs.q");
	t.eq(StringView("msubs.u", 7), toString(MSUBS_U), "msubs.u");
	t.eq(StringView("mtcr", 4), toString(MTCR), "mtcr");
	t.eq(StringView("mul", 3), toString(MUL), "mul");
	t.eq(StringView("mul.h", 5), toString(MUL_H), "mul.h");
	t.eq(StringView("mul.q", 5), toString(MUL_Q), "mul.q");
	t.eq(StringView("mul.u", 5), toString(MUL_U), "mul.u");
	t.eq(StringView("mulm.h", 6), toString(MULM_H), "mulm.h");
	t.eq(StringView("mulms.h", 7), toString(MULMS_H), "mulms.h");
	t.eq(StringView("mulr.h", 6), toString(MULR_H), "mulr.h");
	t.eq(StringView("mulr.q", 6), toString(MULR_Q), "mulr.q");
	t.eq(StringView("muls", 4), toString(MULS), "muls");
	t.eq(StringView("muls.u", 6), toString(MULS_U), "muls.u");
	t.eq(StringView("nand", 4), toString(NAND), "nand");
	t.eq(StringView("nand.t", 6), toString(NAND_T), "nand.t");
	t.eq(StringView("ne", 2), toString(NE), "ne");
	t.eq(StringView("ne.a", 4), toString(NE_A), "ne.a");
	t.eq(StringView("nez.a", 5), toString(NEZ_A), "nez.a");
	t.eq(StringView("nop", 3), toString(NOP), "nop");
	t.eq(StringView("nor", 3), toString(NOR), "nor");
	t.eq(StringView("nor.t", 5), toString(NOR_T), "nor.t");
	t.eq(StringView("not", 3), toString(NOT), "not");
	t.eq(StringView("or", 2), toString(OR), "or");
	t.eq(StringView("or.and.t", 8), toString(OR_AND_T), "or.and.t");
	t.eq(StringView("or.andn.t", 9), toString(OR_ANDN_T), "or.andn.t");
	t.eq(StringView("or.eq", 5), toString(OR_EQ), "or.eq");
	t.eq(StringView("or.ge", 5), toString(OR_GE), "or.ge");
	t.eq(StringView("or.ge.u", 7), toString(OR_GE_U), "or.ge.u");
	t.eq(StringView("or.lt", 5), toString(OR_LT), "or.lt");
	t.eq(StringView("or.lt.u", 7), toString(OR_LT_U), "or.lt.u");
	t.eq(StringView("or.ne", 5), toString(OR_NE), "or.ne");
	t.eq(StringView("or.nor.t", 8), toString(OR_NOR_T), "or.nor.t");
	t.eq(StringView("or.or.t", 7), toString(OR_OR_T), "or.or.t");
	t.eq(StringView("or.t", 4), toString(OR_T), "or.t");
	t.eq(StringView("orn", 3), toString(ORN), "orn");
	t.eq(StringView("orn.t", 5), toString(ORN_T), "orn.t");
	t.eq(StringView("pack", 4), toString(PACK), "pack");
	t.eq(StringView("parity", 6), toString(PARITY), "parity");
	t.eq(StringView("restore", 7), toString(RESTORE), "restore");
	t.eq(StringView("ret", 3), toString(RET), "ret");
	t.eq(StringView("rfe", 3), toString(RFE), "rfe");
	t.eq(StringView("rfm", 3), toString(RFM), "rfm");
	t.eq(StringView("rslcx", 5), toString(RSLCX), "rslcx");
	t.eq(StringView("rstv", 4), toString(RSTV), "rstv");
	t.eq(StringView("rsub", 4), toString(RSUB), "rsub");
	t.eq(StringView("rsubs", 5), toString(RSUBS), "rsubs");
	t.eq(StringView("rsubs.u", 7), toString(RSUBS_U), "rsubs.u");
	t.eq(StringView("sat.b", 5), toString(SAT_B), "sat.b");
	t.eq(StringView("sat.bu", 6), toString(SAT_BU), "sat.bu");
	t.eq(StringView("sat.h", 5), toString(SAT_H), "sat.h");
	t.eq(StringView("sat.hu", 6), toString(SAT_HU), "sat.hu");
	t.eq(StringView("sel", 3), toString(SEL), "sel");
	t.eq(StringView("seln", 4), toString(SELN), "seln");
	t.eq(StringView("sh", 2), toString(SH), "sh");
	t.eq(StringView("sh.and.t", 8), toString(SH_AND_T), "sh.and.t");
	t.eq(StringView("sh.andn.t", 9), toString(SH_ANDN_T), "sh.andn.t");
	t.eq(StringView("sh.eq", 5), toString(SH_EQ), "sh.eq");
	t.eq(StringView("sh.ge", 5), toString(SH_GE), "sh.ge");
	t.eq(StringView("sh.ge.u", 7), toString(SH_GE_U), "sh.ge.u");
	t.eq(StringView("sh.h", 4), toString(SH_H), "sh.h");
	t.eq(StringView("sh.lt", 5), toString(SH_LT), "sh.lt");
	t.eq(StringView("sh.lt.u", 7), toString(SH_LT_U), "sh.lt.u");
	t.eq(StringView("sh.nand.t", 9), toString(SH_NAND_T), "sh.nand.t");
	t.eq(StringView("sh.ne", 5), toString(SH_NE), "sh.ne");
	t.eq(StringView("sh.nor.t", 8), toString(SH_NOR_T), "sh.nor.t");
	t.eq(StringView("sh.or.t", 7), toString(SH_OR_T), "sh.or.t");
	t.eq(StringView("sh.orn.t", 8), toString(SH_ORN_T), "sh.orn.t");
	t.eq(StringView("sh.xnor.t", 9), toString(SH_XNOR_T), "sh.xnor.t");
	t.eq(StringView("sh.xor.t", 8), toString(SH_XOR_T), "sh.xor.t");
	t.eq(StringView("sha", 3), toString(SHA), "sha");
	t.eq(StringView("sha.h", 5), toString(SHA_H), "sha.h");
	t.eq(StringView("shas", 4), toString(SHAS), "shas");
	t.eq(StringView("st.a", 4), toString(ST_A), "st.a");
	t.eq(StringView("st.b", 4), toString(ST_B), "st.b");
	t.eq(StringView("st.d", 4), toString(ST_D), "st.d");
	t.eq(StringView("st.da", 5), toString(ST_DA), "st.da");
	t.eq(StringView("st.h", 4), toString(ST_H), "st.h");
	t.eq(StringView("st.q", 4), toString(ST_Q), "st.q");
	t.eq(StringView("st.t", 4), toString(ST_T), "st.t");
	t.eq(StringView("st.w", 4), toString(ST_W), "st.w");
	t.eq(StringView("stlcx", 5), toString(STLCX), "stlcx");
	t.eq(StringView("stucx", 5), toString(STUCX), "stucx");
	t.eq(StringView("sub", 3), toString(SUB), "sub");
	t.eq(StringView("sub.a", 5), toString(SUB_A), "sub.a");
	t.eq(StringView("sub.b", 5), toString(SUB_B), "sub.b");
	t.eq(StringView("sub.h", 5), toString(SUB_H), "sub.h");
	t.eq(StringView("subc", 4), toString(SUBC), "subc");
	t.eq(StringView("subs", 4), toString(SUBS), "subs");
	t.eq(StringView("subs.h", 6), toString(SUBS_H), "subs.h");
	t.eq(StringView("subs.hu", 7), toString(SUBS_HU), "subs.hu");
	t.eq(StringView("subs.u", 6), toString(SUBS_U), "subs.u");
	t.eq(StringView("subx", 4), toString(SUBX), "subx");
	t.eq(StringView("svlcx", 5), toString(SVLCX), "svlcx");
	t.eq(StringView("swap.w", 6), toString(SWAP_W), "swap.w");
	t.eq(StringView("swapmsk.w", 9), toString(SWAPMSK_W), "swapmsk.w");
	t.eq(StringView("syscall", 7), toString(SYSCALL), "syscall");
	t.eq(StringView("trapsv", 6), toString(TRAPSV), "trapsv");
	t.eq(StringView("trapv", 5), toString(TRAPV), "trapv");
	t.eq(StringView("unpack", 6), toString(UNPACK), "unpack");
	t.eq(StringView("wait", 4), toString(WAIT), "wait");
	t.eq(StringView("xnor", 4), toString(XNOR), "xnor");
	t.eq(StringView("xnor.t", 6), toString(XNOR_T), "xnor.t");
	t.eq(StringView("xor", 3), toString(XOR), "xor");
	t.eq(StringView("xor.eq", 6), toString(XOR_EQ), "xor.eq");
	t.eq(StringView("xor.ge", 6), toString(XOR_GE), "xor.ge");
	t.eq(StringView("xor.ge.u", 8), toString(XOR_GE_U), "xor.ge.u");
	t.eq(StringView("xor.lt", 6), toString(XOR_LT), "xor.lt");
	t.eq(StringView("xor.lt.u", 8), toString(XOR_LT_U), "xor.lt.u");
	t.eq(StringView("xor.ne", 6), toString(XOR_NE), "xor.ne");
	t.eq(StringView("xor.t", 5), toString(XOR_T), "xor.t");
	t.stop();
	t.stopGroup();
} // testConstStringMapMnem

#endif // _HXX

